# ConfigMap for application configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-config
data:
  API_PORT: "3000"
  DB: "mydb"
  DBHOST: "127.0.0.1"
  DBPORT: "3306"
---
# Secret for sensitive data
apiVersion: v1
kind: Secret
metadata:
  name: api-secret
type: Opaque
data:
  DBUSER: YWRtaW4=
  DBPASS: cGFzc3dvcmQ=
---
# Deployment for the Node.js API
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-api
  labels:
    app: node-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: node-api
  template:
    metadata:
      labels:
        app: node-api
    spec:
      containers:
      - name: node-api
        imagePullPolicy: Always
        image: us-central1-docker.pkg.dev/gcp-classes-395503/my-first-docker-registry/api:latest
        envFrom:
        - configMapRef:
            name: api-config
        - secretRef:
            name: api-secret
        ports:
        - containerPort: 3000
      - name: cloud-sql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.28.1
        command: ["/cloud_sql_proxy", 
                  "-instances=gcp-classes-395503:europe-west2:my-sql-instance=tcp:3306",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        volumeMounts:
        - name: cloudsql-instance-credentials
          mountPath: /secrets/cloudsql
          readOnly: true
      volumes:
      - name: cloudsql-instance-credentials
        secret:
          secretName: cloudsql-instance-credentials
---
# Service to expose the Node.js API
apiVersion: v1
kind: Service
metadata:
  name: node-api
spec:
  type: LoadBalancer
  selector:
    app: node-api
  ports:
  - name: http
    port: 80
    targetPort: 3000
